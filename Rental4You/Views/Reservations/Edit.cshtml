@model Rental4You.ViewModels.ReservationVM

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Reservation</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @if (ViewData.ContainsKey("ErrorMessage") && !string.IsNullOrEmpty(ViewData["ErrorMessage"].ToString()))
        {
            <div class="alert alert-danger">@ViewData["ErrorMessage"]</div>
        }
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ReservationId" />
            <input type="hidden" asp-for="VehicleId" />
            <input type="hidden" asp-for="Status" />
            @if (!User.IsInRole("Client")){
                <div class="form-group">
                    <label asp-for="Status" class="control-label"></label>
                    <input asp-for="Status" class="form-control" />
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <label asp-for="PickupDate" class="control-label small"></label>
                <input type="date" asp-for="PickupDate" class="form-control" />
                <span asp-validation-for="PickupDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DeliveryDate" class="control-label small"></label>
                <input type ="date" asp-for="DeliveryDate" class="form-control" />
                <span asp-validation-for="DeliveryDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
